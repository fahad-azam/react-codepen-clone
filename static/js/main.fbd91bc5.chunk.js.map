{"version":3,"sources":["Components/Editor.js","hooks/useLocalStorage.js","Components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","onClick","prevOpen","type","icon","faCompressAlt","faExpandAlt","onBeforeChange","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeOut","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAWe,SAASA,EAAOC,GAAQ,IAGnCC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SANkC,EASjBC,oBAAS,GATQ,mBAS/BC,EAT+B,KAS1BC,EAT0B,KAmBlC,OACI,sBAAKC,UAAS,2BAAsBF,EAAO,GAAI,aAA/C,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,wBAAQO,QAAU,kBAAIF,GAAQ,SAAAG,GAAQ,OAAGA,MAAWC,KAAK,SAASH,UAAU,UAA5E,SACI,cAAC,IAAD,CAAiBI,KAAMN,EAAOO,IAAgBC,WAMtD,cAAC,aAAD,CACAC,eAlBR,SAAsBhB,EAAOiB,EAAMb,GAC/BC,EAASD,IAkBLA,MAAUA,EACVK,UAAW,sBACXS,QACI,CACIC,cAAc,EACdC,MAAM,EACNC,KAAOnB,EACPoB,aAAc,EACdC,MAAO,iBC/CZ,SAASC,EAAgBC,EAAMC,GAE1C,IAAMC,EAJK,iBAIcF,EAD7B,EAE6BnB,oBAAS,WACjC,IAAMsB,EAAUC,aAAaC,QAAQH,GACrC,OAAgB,MAAbC,EAA0BG,KAAKC,MAAMJ,GACb,oBAAjBF,EACCA,IAEAA,KARhB,mBAEWtB,EAFX,KAEkB6B,EAFlB,KAqBI,OARAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUhC,MAGjD,CAACuB,EAAavB,IAIT,CAACA,EAAQ6B,GCqDLI,MAvEf,WAAgB,IAAD,EACQb,EAAgB,OAAO,KAD/B,mBACRc,EADQ,KACHC,EADG,OAEMf,EAAgB,MAAM,KAF5B,mBAERgB,EAFQ,KAEJC,EAFI,OAGIjB,EAAgB,KAAK,KAHzB,mBAGRkB,EAHQ,KAGLC,EAHK,OAIUrC,mBAAS,KAJnB,mBAIRsC,EAJQ,KAIDC,EAJC,KAgCb,OAzBFX,qBAAU,WACV,IAAMY,EAAUC,YAAW,WACvBF,EAAU,mCAAD,OAGLP,EAHK,iCAKFE,EALE,+BAMDE,EANC,0BAUX,KAEF,OAAO,kBAAKM,aAAaF,MACvB,CAACR,EAAKE,EAAIE,IAWR,qCAEA,sBAAKjC,UAAU,gBAAf,UACA,cAACT,EAAD,CAAQE,SAAS,MACTC,YAAY,OACZC,MAAQkC,EACRjC,SAAUkC,IAElB,cAACvC,EAAD,CACQE,SAAS,MACTC,YAAY,MACZC,MAAQoC,EACRnC,SAAUoC,IAElB,cAACzC,EAAD,CACCE,SAAS,aACTC,YAAY,aACZC,MAAQsC,EACRrC,SAAUsC,OAKX,qBAAKlC,UAAU,QAAf,SACE,wBAAQA,UAAU,SAClBmC,OAAQA,EACRK,MAAO,SACPC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eCjEbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fbd91bc5.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport \"codemirror/lib/codemirror.css\"\r\nimport \"codemirror/theme/material.css\"\r\nimport \"codemirror/mode/xml/xml\"\r\nimport \"codemirror/mode/javascript/javascript\"\r\nimport \"codemirror/mode/css/css\"\r\nimport { Controlled as ControlledEditor} from \"react-codemirror2\"\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport default function Editor(props) {\r\n\r\nconst{\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n} = props\r\n\r\nconst [open,setOpen]=useState(true)\r\n\r\n\r\n\r\n    function handleChange(Editor,data, value){\r\n        onChange(value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '' :'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button onClick ={()=>setOpen(prevOpen=>!prevOpen)} type=\"button\" className=\"btnIcon\">\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt}  \r\n                     \r\n                    />                 \r\n                    </button>\r\n            </div>\r\n            \r\n            <ControlledEditor\r\n            onBeforeChange={ handleChange }\r\n            value = { value }\r\n            className= \"code-mirror-wrapper\"\r\n            options={\r\n                {\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode : language,\r\n                    lineNumbers : true,\r\n                    theme: \"material\",\r\n                }\r\n            }\r\n        />\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst PREFIX = \"Codepen-clone-\"\r\n\r\nexport default function useLocalStorage(key , initialValue)\r\n{\r\n    const prefixedKey=PREFIX+key\r\n    const [value ,setValue] =useState(()=>{\r\n     const jsonValue=localStorage.getItem(prefixedKey)\r\n     if(jsonValue != null) return JSON.parse(jsonValue)\r\n     if(typeof(initialValue)=== 'function'){\r\n         return initialValue()\r\n     }else{\r\n         return initialValue\r\n     }\r\n    }\r\n    )\r\n  \r\n    useEffect(()=>{\r\n      localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  \r\n  \r\n    },[prefixedKey, value]\r\n    )\r\n  \r\n  \r\n    return [value , setValue]\r\n  }","import React ,{useState , useEffect} from \"react\"\nimport Editor from \"./Editor\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\n\n\n\n\n\nfunction App() {\nconst [html,setHtml] = useLocalStorage('html',' ')\nconst [css,setCss] = useLocalStorage('css',' ')\nconst [js,setJs] = useLocalStorage('js',' ')\nconst [srcDoc,setSrcDoc]=useState(' ')\n\n\nuseEffect(()=>{\nconst timeOut = setTimeout(()=>{ \n    setSrcDoc(`\n      <html>\n  <body>\n      ${html}\n  </body>\n  <style>${css}</style>\n  <script>${js}</script>\n</html>`\n)\n\n},250\n)\nreturn ()=> clearTimeout(timeOut)\n},[html,css,js])\n\n\n\n\n\n\n\n\n\n  return (\n    <>\n    \n    <div className=\"pane top-pane\">\n    <Editor language=\"xml\" \n            displayName=\"HTML\"\n            value ={html}\n            onChange={setHtml}\n      />\n    <Editor\n            language=\"css\" \n            displayName=\"CSS\"\n            value ={css}\n            onChange={setCss}\n    />\n    <Editor\n     language=\"javascript\" \n     displayName=\"JAVASCRIPT\"\n     value ={js}\n     onChange={setJs}\n    />\n    </div>\n\n\n    <div className=\"pane \">\n      <iframe className=\"screen\"\n      srcDoc={srcDoc}\n      title= \"Output\" \n      sandbox=\"allow-scripts\"\n      frameBorder=\"0\"\n      width=\"100%\"\n      height=\"100%\"\n\n      />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}